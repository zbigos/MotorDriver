ARM GAS  /tmp/ccbnWbZF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB69:
  24              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccbnWbZF.s 			page 2


  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM2_Init(void);
  56:Core/Src/main.c **** static void MX_TIM3_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c ****   
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccbnWbZF.s 			page 3


  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_TIM2_Init();
  96:Core/Src/main.c ****   MX_TIM3_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   int p = 0;
 104:Core/Src/main.c ****  
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1); 
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2); 
 107:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); 
 108:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   int l = 0;
 111:Core/Src/main.c ****   TIM3->CCR3 = 25;
 112:Core/Src/main.c ****   TIM3->CCR4 = 25;
 113:Core/Src/main.c ****   TIM3->CCR1 = 25;
 114:Core/Src/main.c ****   TIM3->CCR2 = 25;
 115:Core/Src/main.c ****   
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     p += 1;
 120:Core/Src/main.c ****     HAL_Delay(50);
 121:Core/Src/main.c ****     
 122:Core/Src/main.c ****     if (p >= 0 && p < 100) {
 123:Core/Src/main.c ****       TIM3->CCR3 = p;
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 0);
 126:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 1);
 127:Core/Src/main.c ****       
 128:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INA_GPIO_Port, CHA_INA_Pin, 0);
 129:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 1);
 130:Core/Src/main.c ****       // zwiększam prawo
 131:Core/Src/main.c ****     } else if (p >= 100 && p < 200) {
 132:Core/Src/main.c ****       TIM3->CCR3 = 200 - p;
 133:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 0);
 134:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 1);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INA_GPIO_Port, CHA_INA_Pin, 0);
 137:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 1);
 138:Core/Src/main.c ****       // zmniejszam prawo
 139:Core/Src/main.c ****     } else if (p >= 200 && p < 300) {
 140:Core/Src/main.c ****       TIM3->CCR3 = p - 200;
 141:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 142:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 0);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INA_GPIO_Port, CHA_INA_Pin, 1);
 145:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 0);
 146:Core/Src/main.c ****       // zwiększam lewo
 147:Core/Src/main.c ****     } else if (p >= 300 && p < 400) {
 148:Core/Src/main.c ****       TIM3->CCR3 = 400 - p;
ARM GAS  /tmp/ccbnWbZF.s 			page 4


 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 151:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 0);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INA_GPIO_Port, CHA_INA_Pin, 1);
 154:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 0);
 155:Core/Src/main.c ****       // zmniejszam lewo
 156:Core/Src/main.c ****     } else p = 0;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 201:Core/Src/main.c ****   * @param None
 202:Core/Src/main.c ****   * @retval None
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** static void MX_TIM2_Init(void)
 205:Core/Src/main.c **** {
ARM GAS  /tmp/ccbnWbZF.s 			page 5


 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 212:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 217:Core/Src/main.c ****   htim2.Instance = TIM2;
 218:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 219:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 220:Core/Src/main.c ****   htim2.Init.Period = 0;
 221:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 222:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 223:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 224:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 225:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 226:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 227:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 228:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 229:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 230:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 231:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 232:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 237:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 238:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 250:Core/Src/main.c ****   * @param None
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** static void MX_TIM3_Init(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 261:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 262:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/ccbnWbZF.s 			page 6


 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 267:Core/Src/main.c ****   htim3.Instance = TIM3;
 268:Core/Src/main.c ****   htim3.Init.Prescaler = 499;
 269:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 270:Core/Src/main.c ****   htim3.Init.Period = 101;
 271:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 272:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 273:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 278:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 287:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 288:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 293:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 294:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 295:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 296:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 297:Core/Src/main.c ****   {
 298:Core/Src/main.c ****     Error_Handler();
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     Error_Handler();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 315:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
ARM GAS  /tmp/ccbnWbZF.s 			page 7


 320:Core/Src/main.c ****   * @brief GPIO Initialization Function
 321:Core/Src/main.c ****   * @param None
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** static void MX_GPIO_Init(void)
 325:Core/Src/main.c **** {
  25              		.loc 1 325 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 24
  32              		.cfi_offset 4, -24
  33              		.cfi_offset 5, -20
  34              		.cfi_offset 6, -16
  35              		.cfi_offset 7, -12
  36              		.cfi_offset 8, -8
  37              		.cfi_offset 14, -4
  38 0004 88B0     		sub	sp, sp, #32
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 326:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 326 0
  42 0006 0024     		movs	r4, #0
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
  47              	.LBB2:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 329:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 329 0
  49 0010 294B     		ldr	r3, .L3
  50 0012 9A69     		ldr	r2, [r3, #24]
  51 0014 42F00402 		orr	r2, r2, #4
  52 0018 9A61     		str	r2, [r3, #24]
  53 001a 9A69     		ldr	r2, [r3, #24]
  54 001c 02F00402 		and	r2, r2, #4
  55 0020 0192     		str	r2, [sp, #4]
  56 0022 019A     		ldr	r2, [sp, #4]
  57              	.LBE2:
  58              	.LBB3:
 330:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  59              		.loc 1 330 0
  60 0024 9A69     		ldr	r2, [r3, #24]
  61 0026 42F00802 		orr	r2, r2, #8
  62 002a 9A61     		str	r2, [r3, #24]
  63 002c 9A69     		ldr	r2, [r3, #24]
  64 002e 02F00802 		and	r2, r2, #8
  65 0032 0292     		str	r2, [sp, #8]
  66 0034 029A     		ldr	r2, [sp, #8]
  67              	.LBE3:
  68              	.LBB4:
 331:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  69              		.loc 1 331 0
ARM GAS  /tmp/ccbnWbZF.s 			page 8


  70 0036 9A69     		ldr	r2, [r3, #24]
  71 0038 42F01002 		orr	r2, r2, #16
  72 003c 9A61     		str	r2, [r3, #24]
  73 003e 9B69     		ldr	r3, [r3, #24]
  74 0040 03F01003 		and	r3, r3, #16
  75 0044 0393     		str	r3, [sp, #12]
  76 0046 039B     		ldr	r3, [sp, #12]
  77              	.LBE4:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 334:Core/Src/main.c ****   HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, GPIO_PIN_RESET);
  78              		.loc 1 334 0
  79 0048 DFF87480 		ldr	r8, .L3+8
  80 004c 2246     		mov	r2, r4
  81 004e 4FF48041 		mov	r1, #16384
  82 0052 4046     		mov	r0, r8
  83 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 337:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, CHA_INA_Pin|LED2_Pin, GPIO_PIN_RESET);
  85              		.loc 1 337 0
  86 0058 184D     		ldr	r5, .L3+4
  87 005a 2246     		mov	r2, r4
  88 005c 4FF4C071 		mov	r1, #384
  89 0060 2846     		mov	r0, r5
  90 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  91              	.LVL1:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 340:Core/Src/main.c ****   HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
  92              		.loc 1 340 0
  93 0066 0122     		movs	r2, #1
  94 0068 4FF40071 		mov	r1, #512
  95 006c 2846     		mov	r0, r5
  96 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
  97              	.LVL2:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /*Configure GPIO pin : CHA_INB_Pin */
 343:Core/Src/main.c ****   GPIO_InitStruct.Pin = CHA_INB_Pin;
  98              		.loc 1 343 0
  99 0072 4FF48043 		mov	r3, #16384
 100 0076 0493     		str	r3, [sp, #16]
 344:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 101              		.loc 1 344 0
 102 0078 0127     		movs	r7, #1
 103 007a 0597     		str	r7, [sp, #20]
 345:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 104              		.loc 1 345 0
 105 007c 0694     		str	r4, [sp, #24]
 346:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 106              		.loc 1 346 0
 107 007e 0226     		movs	r6, #2
 108 0080 0796     		str	r6, [sp, #28]
 347:Core/Src/main.c ****   HAL_GPIO_Init(CHA_INB_GPIO_Port, &GPIO_InitStruct);
 109              		.loc 1 347 0
 110 0082 04A9     		add	r1, sp, #16
ARM GAS  /tmp/ccbnWbZF.s 			page 9


 111 0084 4046     		mov	r0, r8
 112 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL3:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /*Configure GPIO pin : CHA_INA_Pin */
 350:Core/Src/main.c ****   GPIO_InitStruct.Pin = CHA_INA_Pin;
 114              		.loc 1 350 0
 115 008a 8023     		movs	r3, #128
 116 008c 0493     		str	r3, [sp, #16]
 351:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 351 0
 118 008e 0597     		str	r7, [sp, #20]
 352:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 119              		.loc 1 352 0
 120 0090 0694     		str	r4, [sp, #24]
 353:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 121              		.loc 1 353 0
 122 0092 0796     		str	r6, [sp, #28]
 354:Core/Src/main.c ****   HAL_GPIO_Init(CHA_INA_GPIO_Port, &GPIO_InitStruct);
 123              		.loc 1 354 0
 124 0094 04A9     		add	r1, sp, #16
 125 0096 2846     		mov	r0, r5
 126 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL4:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /*Configure GPIO pins : LED2_Pin LED1_Pin */
 357:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED2_Pin|LED1_Pin;
 128              		.loc 1 357 0
 129 009c 4FF44073 		mov	r3, #768
 130 00a0 0493     		str	r3, [sp, #16]
 358:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 131              		.loc 1 358 0
 132 00a2 1123     		movs	r3, #17
 133 00a4 0593     		str	r3, [sp, #20]
 359:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 359 0
 135 00a6 0694     		str	r4, [sp, #24]
 360:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 360 0
 137 00a8 0796     		str	r6, [sp, #28]
 361:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 138              		.loc 1 361 0
 139 00aa 04A9     		add	r1, sp, #16
 140 00ac 2846     		mov	r0, r5
 141 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 142              	.LVL5:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** }
 143              		.loc 1 363 0
 144 00b2 08B0     		add	sp, sp, #32
 145              	.LCFI2:
 146              		.cfi_def_cfa_offset 24
 147              		@ sp needed
 148 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 149              	.L4:
 150              		.align	2
 151              	.L3:
ARM GAS  /tmp/ccbnWbZF.s 			page 10


 152 00b8 00100240 		.word	1073876992
 153 00bc 00100140 		.word	1073811456
 154 00c0 000C0140 		.word	1073810432
 155              		.cfi_endproc
 156              	.LFE69:
 158              		.section	.text.MX_TIM2_Init,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	MX_TIM2_Init:
 166              	.LFB67:
 205:Core/Src/main.c **** 
 167              		.loc 1 205 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 48
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 30B5     		push	{r4, r5, lr}
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 12
 174              		.cfi_offset 4, -12
 175              		.cfi_offset 5, -8
 176              		.cfi_offset 14, -4
 177 0002 8DB0     		sub	sp, sp, #52
 178              	.LCFI4:
 179              		.cfi_def_cfa_offset 64
 211:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 180              		.loc 1 211 0
 181 0004 2022     		movs	r2, #32
 182 0006 0021     		movs	r1, #0
 183 0008 04A8     		add	r0, sp, #16
 184 000a FFF7FEFF 		bl	memset
 185              	.LVL6:
 212:Core/Src/main.c **** 
 186              		.loc 1 212 0
 187 000e 0024     		movs	r4, #0
 188 0010 0194     		str	r4, [sp, #4]
 189 0012 0294     		str	r4, [sp, #8]
 217:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 190              		.loc 1 217 0
 191 0014 0C4D     		ldr	r5, .L7
 192 0016 4FF08043 		mov	r3, #1073741824
 193 001a 2B60     		str	r3, [r5]
 218:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 194              		.loc 1 218 0
 195 001c 6C60     		str	r4, [r5, #4]
 219:Core/Src/main.c ****   htim2.Init.Period = 0;
 196              		.loc 1 219 0
 197 001e AC60     		str	r4, [r5, #8]
 220:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 198              		.loc 1 220 0
 199 0020 EC60     		str	r4, [r5, #12]
 221:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 200              		.loc 1 221 0
 201 0022 2C61     		str	r4, [r5, #16]
 222:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
ARM GAS  /tmp/ccbnWbZF.s 			page 11


 202              		.loc 1 222 0
 203 0024 AC61     		str	r4, [r5, #24]
 223:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 204              		.loc 1 223 0
 205 0026 0123     		movs	r3, #1
 206 0028 0393     		str	r3, [sp, #12]
 225:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 207              		.loc 1 225 0
 208 002a 0593     		str	r3, [sp, #20]
 229:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 209              		.loc 1 229 0
 210 002c 0993     		str	r3, [sp, #36]
 232:Core/Src/main.c ****   {
 211              		.loc 1 232 0
 212 002e 03A9     		add	r1, sp, #12
 213 0030 2846     		mov	r0, r5
 214 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 215              	.LVL7:
 236:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 216              		.loc 1 236 0
 217 0036 0194     		str	r4, [sp, #4]
 237:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 218              		.loc 1 237 0
 219 0038 0294     		str	r4, [sp, #8]
 238:Core/Src/main.c ****   {
 220              		.loc 1 238 0
 221 003a 01A9     		add	r1, sp, #4
 222 003c 2846     		mov	r0, r5
 223 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 224              	.LVL8:
 246:Core/Src/main.c **** 
 225              		.loc 1 246 0
 226 0042 0DB0     		add	sp, sp, #52
 227              	.LCFI5:
 228              		.cfi_def_cfa_offset 12
 229              		@ sp needed
 230 0044 30BD     		pop	{r4, r5, pc}
 231              	.L8:
 232 0046 00BF     		.align	2
 233              	.L7:
 234 0048 00000000 		.word	htim2
 235              		.cfi_endproc
 236              	.LFE67:
 238              		.section	.text.MX_TIM3_Init,"ax",%progbits
 239              		.align	1
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	MX_TIM3_Init:
 246              	.LFB68:
 254:Core/Src/main.c **** 
 247              		.loc 1 254 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 56
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccbnWbZF.s 			page 12


 252              	.LCFI6:
 253              		.cfi_def_cfa_offset 12
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 257 0002 8FB0     		sub	sp, sp, #60
 258              	.LCFI7:
 259              		.cfi_def_cfa_offset 72
 260:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 260              		.loc 1 260 0
 261 0004 0024     		movs	r4, #0
 262 0006 0A94     		str	r4, [sp, #40]
 263 0008 0B94     		str	r4, [sp, #44]
 264 000a 0C94     		str	r4, [sp, #48]
 265 000c 0D94     		str	r4, [sp, #52]
 261:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 266              		.loc 1 261 0
 267 000e 0894     		str	r4, [sp, #32]
 268 0010 0994     		str	r4, [sp, #36]
 262:Core/Src/main.c **** 
 269              		.loc 1 262 0
 270 0012 0194     		str	r4, [sp, #4]
 271 0014 0294     		str	r4, [sp, #8]
 272 0016 0394     		str	r4, [sp, #12]
 273 0018 0494     		str	r4, [sp, #16]
 274 001a 0594     		str	r4, [sp, #20]
 275 001c 0694     		str	r4, [sp, #24]
 276 001e 0794     		str	r4, [sp, #28]
 267:Core/Src/main.c ****   htim3.Init.Prescaler = 499;
 277              		.loc 1 267 0
 278 0020 1E4D     		ldr	r5, .L11
 279 0022 1F4B     		ldr	r3, .L11+4
 280 0024 2B60     		str	r3, [r5]
 268:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 281              		.loc 1 268 0
 282 0026 40F2F313 		movw	r3, #499
 283 002a 6B60     		str	r3, [r5, #4]
 269:Core/Src/main.c ****   htim3.Init.Period = 101;
 284              		.loc 1 269 0
 285 002c AC60     		str	r4, [r5, #8]
 270:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 286              		.loc 1 270 0
 287 002e 6523     		movs	r3, #101
 288 0030 EB60     		str	r3, [r5, #12]
 271:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 289              		.loc 1 271 0
 290 0032 2C61     		str	r4, [r5, #16]
 272:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 291              		.loc 1 272 0
 292 0034 AC61     		str	r4, [r5, #24]
 273:Core/Src/main.c ****   {
 293              		.loc 1 273 0
 294 0036 2846     		mov	r0, r5
 295 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 296              	.LVL9:
 277:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 297              		.loc 1 277 0
ARM GAS  /tmp/ccbnWbZF.s 			page 13


 298 003c 4FF48053 		mov	r3, #4096
 299 0040 0A93     		str	r3, [sp, #40]
 278:Core/Src/main.c ****   {
 300              		.loc 1 278 0
 301 0042 0AA9     		add	r1, sp, #40
 302 0044 2846     		mov	r0, r5
 303 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 304              	.LVL10:
 282:Core/Src/main.c ****   {
 305              		.loc 1 282 0
 306 004a 2846     		mov	r0, r5
 307 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 308              	.LVL11:
 286:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 309              		.loc 1 286 0
 310 0050 0894     		str	r4, [sp, #32]
 287:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 311              		.loc 1 287 0
 312 0052 0994     		str	r4, [sp, #36]
 288:Core/Src/main.c ****   {
 313              		.loc 1 288 0
 314 0054 08A9     		add	r1, sp, #32
 315 0056 2846     		mov	r0, r5
 316 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 317              	.LVL12:
 292:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 318              		.loc 1 292 0
 319 005c 6023     		movs	r3, #96
 320 005e 0193     		str	r3, [sp, #4]
 293:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 321              		.loc 1 293 0
 322 0060 0294     		str	r4, [sp, #8]
 294:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 323              		.loc 1 294 0
 324 0062 0394     		str	r4, [sp, #12]
 295:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 325              		.loc 1 295 0
 326 0064 0594     		str	r4, [sp, #20]
 296:Core/Src/main.c ****   {
 327              		.loc 1 296 0
 328 0066 2246     		mov	r2, r4
 329 0068 01A9     		add	r1, sp, #4
 330 006a 2846     		mov	r0, r5
 331 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 332              	.LVL13:
 300:Core/Src/main.c ****   {
 333              		.loc 1 300 0
 334 0070 0422     		movs	r2, #4
 335 0072 0DEB0201 		add	r1, sp, r2
 336 0076 2846     		mov	r0, r5
 337 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 338              	.LVL14:
 304:Core/Src/main.c ****   {
 339              		.loc 1 304 0
 340 007c 0822     		movs	r2, #8
 341 007e 01A9     		add	r1, sp, #4
 342 0080 2846     		mov	r0, r5
ARM GAS  /tmp/ccbnWbZF.s 			page 14


 343 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 344              	.LVL15:
 308:Core/Src/main.c ****   {
 345              		.loc 1 308 0
 346 0086 0C22     		movs	r2, #12
 347 0088 01A9     		add	r1, sp, #4
 348 008a 2846     		mov	r0, r5
 349 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 350              	.LVL16:
 315:Core/Src/main.c **** 
 351              		.loc 1 315 0
 352 0090 2846     		mov	r0, r5
 353 0092 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 354              	.LVL17:
 317:Core/Src/main.c **** 
 355              		.loc 1 317 0
 356 0096 0FB0     		add	sp, sp, #60
 357              	.LCFI8:
 358              		.cfi_def_cfa_offset 12
 359              		@ sp needed
 360 0098 30BD     		pop	{r4, r5, pc}
 361              	.L12:
 362 009a 00BF     		.align	2
 363              	.L11:
 364 009c 00000000 		.word	htim3
 365 00a0 00040040 		.word	1073742848
 366              		.cfi_endproc
 367              	.LFE68:
 369              		.section	.text.SystemClock_Config,"ax",%progbits
 370              		.align	1
 371              		.global	SystemClock_Config
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	SystemClock_Config:
 378              	.LFB66:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 379              		.loc 1 170 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 64
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 10B5     		push	{r4, lr}
 384              	.LCFI9:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 388 0002 90B0     		sub	sp, sp, #64
 389              	.LCFI10:
 390              		.cfi_def_cfa_offset 72
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 391              		.loc 1 171 0
 392 0004 2422     		movs	r2, #36
 393 0006 0021     		movs	r1, #0
 394 0008 07A8     		add	r0, sp, #28
 395 000a FFF7FEFF 		bl	memset
 396              	.LVL18:
ARM GAS  /tmp/ccbnWbZF.s 			page 15


 172:Core/Src/main.c **** 
 397              		.loc 1 172 0
 398 000e 0024     		movs	r4, #0
 399 0010 0194     		str	r4, [sp, #4]
 400 0012 0294     		str	r4, [sp, #8]
 401 0014 0394     		str	r4, [sp, #12]
 402 0016 0494     		str	r4, [sp, #16]
 403 0018 0594     		str	r4, [sp, #20]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 404              		.loc 1 176 0
 405 001a 0223     		movs	r3, #2
 406 001c 0693     		str	r3, [sp, #24]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 407              		.loc 1 177 0
 408 001e 0123     		movs	r3, #1
 409 0020 0A93     		str	r3, [sp, #40]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 410              		.loc 1 178 0
 411 0022 1023     		movs	r3, #16
 412 0024 0B93     		str	r3, [sp, #44]
 180:Core/Src/main.c ****   {
 413              		.loc 1 180 0
 414 0026 06A8     		add	r0, sp, #24
 415 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 416              	.LVL19:
 186:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 417              		.loc 1 186 0
 418 002c 0F23     		movs	r3, #15
 419 002e 0193     		str	r3, [sp, #4]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 420              		.loc 1 188 0
 421 0030 0294     		str	r4, [sp, #8]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 422              		.loc 1 189 0
 423 0032 0394     		str	r4, [sp, #12]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 424              		.loc 1 190 0
 425 0034 0494     		str	r4, [sp, #16]
 191:Core/Src/main.c **** 
 426              		.loc 1 191 0
 427 0036 0594     		str	r4, [sp, #20]
 193:Core/Src/main.c ****   {
 428              		.loc 1 193 0
 429 0038 2146     		mov	r1, r4
 430 003a 01A8     		add	r0, sp, #4
 431 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 432              	.LVL20:
 197:Core/Src/main.c **** 
 433              		.loc 1 197 0
 434 0040 10B0     		add	sp, sp, #64
 435              	.LCFI11:
 436              		.cfi_def_cfa_offset 8
 437              		@ sp needed
 438 0042 10BD     		pop	{r4, pc}
 439              		.cfi_endproc
 440              	.LFE66:
 442              		.section	.text.main,"ax",%progbits
ARM GAS  /tmp/ccbnWbZF.s 			page 16


 443              		.align	1
 444              		.global	main
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu softvfp
 450              	main:
 451              	.LFB65:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 452              		.loc 1 71 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 38B5     		push	{r3, r4, r5, lr}
 457              	.LCFI12:
 458              		.cfi_def_cfa_offset 16
 459              		.cfi_offset 3, -16
 460              		.cfi_offset 4, -12
 461              		.cfi_offset 5, -8
 462              		.cfi_offset 14, -4
  80:Core/Src/main.c **** 
 463              		.loc 1 80 0
 464 0002 FFF7FEFF 		bl	HAL_Init
 465              	.LVL21:
  87:Core/Src/main.c **** 
 466              		.loc 1 87 0
 467 0006 FFF7FEFF 		bl	SystemClock_Config
 468              	.LVL22:
  94:Core/Src/main.c ****   MX_TIM2_Init();
 469              		.loc 1 94 0
 470 000a FFF7FEFF 		bl	MX_GPIO_Init
 471              	.LVL23:
  95:Core/Src/main.c ****   MX_TIM3_Init();
 472              		.loc 1 95 0
 473 000e FFF7FEFF 		bl	MX_TIM2_Init
 474              	.LVL24:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 475              		.loc 1 96 0
 476 0012 FFF7FEFF 		bl	MX_TIM3_Init
 477              	.LVL25:
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2); 
 478              		.loc 1 105 0
 479 0016 504C     		ldr	r4, .L27
 480 0018 0021     		movs	r1, #0
 481 001a 2046     		mov	r0, r4
 482 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 483              	.LVL26:
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); 
 484              		.loc 1 106 0
 485 0020 0421     		movs	r1, #4
 486 0022 2046     		mov	r0, r4
 487 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 488              	.LVL27:
 107:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 489              		.loc 1 107 0
 490 0028 0821     		movs	r1, #8
 491 002a 2046     		mov	r0, r4
ARM GAS  /tmp/ccbnWbZF.s 			page 17


 492 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 493              	.LVL28:
 108:Core/Src/main.c **** 
 494              		.loc 1 108 0
 495 0030 0C21     		movs	r1, #12
 496 0032 2046     		mov	r0, r4
 497 0034 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 498              	.LVL29:
 111:Core/Src/main.c ****   TIM3->CCR4 = 25;
 499              		.loc 1 111 0
 500 0038 484B     		ldr	r3, .L27+4
 501 003a 1922     		movs	r2, #25
 502 003c DA63     		str	r2, [r3, #60]
 112:Core/Src/main.c ****   TIM3->CCR1 = 25;
 503              		.loc 1 112 0
 504 003e 1A64     		str	r2, [r3, #64]
 113:Core/Src/main.c ****   TIM3->CCR2 = 25;
 505              		.loc 1 113 0
 506 0040 5A63     		str	r2, [r3, #52]
 114:Core/Src/main.c ****   
 507              		.loc 1 114 0
 508 0042 9A63     		str	r2, [r3, #56]
 103:Core/Src/main.c ****  
 509              		.loc 1 103 0
 510 0044 0025     		movs	r5, #0
 511 0046 1AE0     		b	.L16
 512              	.LVL30:
 513              	.L23:
 123:Core/Src/main.c **** 
 514              		.loc 1 123 0
 515 0048 444B     		ldr	r3, .L27+4
 516 004a DC63     		str	r4, [r3, #60]
 125:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 1);
 517              		.loc 1 125 0
 518 004c 444D     		ldr	r5, .L27+8
 519 004e 0022     		movs	r2, #0
 520 0050 4FF40071 		mov	r1, #512
 521 0054 2846     		mov	r0, r5
 522 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 523              	.LVL31:
 126:Core/Src/main.c ****       
 524              		.loc 1 126 0
 525 005a 0122     		movs	r2, #1
 526 005c 4FF48071 		mov	r1, #256
 527 0060 2846     		mov	r0, r5
 528 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL32:
 128:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 1);
 530              		.loc 1 128 0
 531 0066 0022     		movs	r2, #0
 532 0068 8021     		movs	r1, #128
 533 006a 2846     		mov	r0, r5
 534 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 535              	.LVL33:
 129:Core/Src/main.c ****       // zwiększam prawo
 536              		.loc 1 129 0
 537 0070 0122     		movs	r2, #1
ARM GAS  /tmp/ccbnWbZF.s 			page 18


 538 0072 4FF48041 		mov	r1, #16384
 539 0076 3B48     		ldr	r0, .L27+12
 540 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 541              	.LVL34:
 119:Core/Src/main.c ****     HAL_Delay(50);
 542              		.loc 1 119 0
 543 007c 2546     		mov	r5, r4
 544              	.LVL35:
 545              	.L16:
 546 007e 6C1C     		adds	r4, r5, #1
 547              	.LVL36:
 120:Core/Src/main.c ****     
 548              		.loc 1 120 0
 549 0080 3220     		movs	r0, #50
 550 0082 FFF7FEFF 		bl	HAL_Delay
 551              	.LVL37:
 122:Core/Src/main.c ****       TIM3->CCR3 = p;
 552              		.loc 1 122 0
 553 0086 632C     		cmp	r4, #99
 554 0088 DED9     		bls	.L23
 131:Core/Src/main.c ****       TIM3->CCR3 = 200 - p;
 555              		.loc 1 131 0
 556 008a A4F16403 		sub	r3, r4, #100
 557 008e 632B     		cmp	r3, #99
 558 0090 09D9     		bls	.L24
 139:Core/Src/main.c ****       TIM3->CCR3 = p - 200;
 559              		.loc 1 139 0
 560 0092 A4F1C803 		sub	r3, r4, #200
 561 0096 632B     		cmp	r3, #99
 562 0098 23D9     		bls	.L25
 147:Core/Src/main.c ****       TIM3->CCR3 = 400 - p;
 563              		.loc 1 147 0
 564 009a A4F59673 		sub	r3, r4, #300
 565 009e 632B     		cmp	r3, #99
 566 00a0 3CD9     		bls	.L26
 156:Core/Src/main.c **** 
 567              		.loc 1 156 0
 568 00a2 0025     		movs	r5, #0
 569 00a4 EBE7     		b	.L16
 570              	.L24:
 132:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 0);
 571              		.loc 1 132 0
 572 00a6 C4F1C802 		rsb	r2, r4, #200
 573 00aa 2C4B     		ldr	r3, .L27+4
 574 00ac DA63     		str	r2, [r3, #60]
 133:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 1);
 575              		.loc 1 133 0
 576 00ae 2C4D     		ldr	r5, .L27+8
 577 00b0 0022     		movs	r2, #0
 578 00b2 4FF40071 		mov	r1, #512
 579 00b6 2846     		mov	r0, r5
 580 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 581              	.LVL38:
 134:Core/Src/main.c **** 
 582              		.loc 1 134 0
 583 00bc 0122     		movs	r2, #1
 584 00be 4FF48071 		mov	r1, #256
ARM GAS  /tmp/ccbnWbZF.s 			page 19


 585 00c2 2846     		mov	r0, r5
 586 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 587              	.LVL39:
 136:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 1);
 588              		.loc 1 136 0
 589 00c8 0022     		movs	r2, #0
 590 00ca 8021     		movs	r1, #128
 591 00cc 2846     		mov	r0, r5
 592 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 593              	.LVL40:
 137:Core/Src/main.c ****       // zmniejszam prawo
 594              		.loc 1 137 0
 595 00d2 0122     		movs	r2, #1
 596 00d4 4FF48041 		mov	r1, #16384
 597 00d8 2248     		ldr	r0, .L27+12
 598 00da FFF7FEFF 		bl	HAL_GPIO_WritePin
 599              	.LVL41:
 119:Core/Src/main.c ****     HAL_Delay(50);
 600              		.loc 1 119 0
 601 00de 2546     		mov	r5, r4
 602 00e0 CDE7     		b	.L16
 603              	.L25:
 140:Core/Src/main.c ****       HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 604              		.loc 1 140 0
 605 00e2 C73D     		subs	r5, r5, #199
 606 00e4 1D4B     		ldr	r3, .L27+4
 607 00e6 DD63     		str	r5, [r3, #60]
 141:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 0);
 608              		.loc 1 141 0
 609 00e8 1D4D     		ldr	r5, .L27+8
 610 00ea 0122     		movs	r2, #1
 611 00ec 4FF40071 		mov	r1, #512
 612 00f0 2846     		mov	r0, r5
 613 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 614              	.LVL42:
 142:Core/Src/main.c **** 
 615              		.loc 1 142 0
 616 00f6 0022     		movs	r2, #0
 617 00f8 4FF48071 		mov	r1, #256
 618 00fc 2846     		mov	r0, r5
 619 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 620              	.LVL43:
 144:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 0);
 621              		.loc 1 144 0
 622 0102 0122     		movs	r2, #1
 623 0104 8021     		movs	r1, #128
 624 0106 2846     		mov	r0, r5
 625 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 626              	.LVL44:
 145:Core/Src/main.c ****       // zwiększam lewo
 627              		.loc 1 145 0
 628 010c 0022     		movs	r2, #0
 629 010e 4FF48041 		mov	r1, #16384
 630 0112 1448     		ldr	r0, .L27+12
 631 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 632              	.LVL45:
 119:Core/Src/main.c ****     HAL_Delay(50);
ARM GAS  /tmp/ccbnWbZF.s 			page 20


 633              		.loc 1 119 0
 634 0118 2546     		mov	r5, r4
 635 011a B0E7     		b	.L16
 636              	.L26:
 148:Core/Src/main.c **** 
 637              		.loc 1 148 0
 638 011c C4F5C872 		rsb	r2, r4, #400
 639 0120 0E4B     		ldr	r3, .L27+4
 640 0122 DA63     		str	r2, [r3, #60]
 150:Core/Src/main.c ****       HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 0);
 641              		.loc 1 150 0
 642 0124 0E4D     		ldr	r5, .L27+8
 643 0126 0122     		movs	r2, #1
 644 0128 4FF40071 		mov	r1, #512
 645 012c 2846     		mov	r0, r5
 646 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 647              	.LVL46:
 151:Core/Src/main.c **** 
 648              		.loc 1 151 0
 649 0132 0022     		movs	r2, #0
 650 0134 4FF48071 		mov	r1, #256
 651 0138 2846     		mov	r0, r5
 652 013a FFF7FEFF 		bl	HAL_GPIO_WritePin
 653              	.LVL47:
 153:Core/Src/main.c ****       HAL_GPIO_WritePin(CHA_INB_GPIO_Port, CHA_INB_Pin, 0);
 654              		.loc 1 153 0
 655 013e 0122     		movs	r2, #1
 656 0140 8021     		movs	r1, #128
 657 0142 2846     		mov	r0, r5
 658 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 659              	.LVL48:
 154:Core/Src/main.c ****       // zmniejszam lewo
 660              		.loc 1 154 0
 661 0148 0022     		movs	r2, #0
 662 014a 4FF48041 		mov	r1, #16384
 663 014e 0548     		ldr	r0, .L27+12
 664 0150 FFF7FEFF 		bl	HAL_GPIO_WritePin
 665              	.LVL49:
 119:Core/Src/main.c ****     HAL_Delay(50);
 666              		.loc 1 119 0
 667 0154 2546     		mov	r5, r4
 668 0156 92E7     		b	.L16
 669              	.L28:
 670              		.align	2
 671              	.L27:
 672 0158 00000000 		.word	htim3
 673 015c 00040040 		.word	1073742848
 674 0160 00100140 		.word	1073811456
 675 0164 000C0140 		.word	1073810432
 676              		.cfi_endproc
 677              	.LFE65:
 679              		.section	.text.Error_Handler,"ax",%progbits
 680              		.align	1
 681              		.global	Error_Handler
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
ARM GAS  /tmp/ccbnWbZF.s 			page 21


 685              		.fpu softvfp
 687              	Error_Handler:
 688              	.LFB70:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE END 4 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** void Error_Handler(void)
 374:Core/Src/main.c **** {
 689              		.loc 1 374 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 375:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 376:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 379:Core/Src/main.c **** }
 694              		.loc 1 379 0
 695 0000 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE70:
 699              		.comm	htim3,72,4
 700              		.comm	htim2,72,4
 701              		.text
 702              	.Letext0:
 703              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 704              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 705              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 706              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 707              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 708              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 709              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 710              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 711              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 712              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 713              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 714              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 715              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 716              		.file 15 "Core/Inc/main.h"
 717              		.file 16 "<built-in>"
ARM GAS  /tmp/ccbnWbZF.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccbnWbZF.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccbnWbZF.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccbnWbZF.s:152    .text.MX_GPIO_Init:00000000000000b8 $d
     /tmp/ccbnWbZF.s:159    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccbnWbZF.s:165    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccbnWbZF.s:234    .text.MX_TIM2_Init:0000000000000048 $d
                            *COM*:0000000000000048 htim2
     /tmp/ccbnWbZF.s:239    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccbnWbZF.s:245    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccbnWbZF.s:364    .text.MX_TIM3_Init:000000000000009c $d
                            *COM*:0000000000000048 htim3
     /tmp/ccbnWbZF.s:370    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccbnWbZF.s:377    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccbnWbZF.s:443    .text.main:0000000000000000 $t
     /tmp/ccbnWbZF.s:450    .text.main:0000000000000000 main
     /tmp/ccbnWbZF.s:672    .text.main:0000000000000158 $d
     /tmp/ccbnWbZF.s:680    .text.Error_Handler:0000000000000000 $t
     /tmp/ccbnWbZF.s:687    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_Delay
